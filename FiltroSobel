# importação de bibliotecas
import cv2 as cv
import matplotlib.pyplot as plt
import numpy as np
import requests

# definição do caminho da imagem
url = "https://cdn.pixabay.com/photo/2017/05/17/12/42/tiger-2320819_960_720.jpg"
# requisição da imagem
r = requests.get(url)
# abre a imagem e (?)
with open ('test.jpg', 'wb') as f:
  f.write(r.content)

# lê a imagem e guarda na variável 'img'
img = cv.imread('test.jpg')

# conversão da imagem colorida para cinza
gray = cv.cvtColor(img, cv.COLOR_BGR2GRAY)

# aplicação de filtro Gaussiano
img = cv.GaussianBlur(gray, (3,3), 0)

# aplicação do filtro de sobel em x
sobelx = cv.Sobel(src=img, ddepth=cv.CV_64F, dx=1, dy=0, ksize=5)

# aplicação do filtro de sobel em y
sobely = cv.Sobel(src=img, ddepth=cv.CV_64F, dx=0, dy=1, ksize=5)

# aplicação do filtro de sobel em x e y concatenados
sobelxy = cv.Sobel(src=img, ddepth=cv.CV_64F, dx=1, dy=1, ksize=5)

# geração da imagem original
plt.figure(figsize=(18,19))
plt.subplot(221)
plt.imshow(img, cmap='gray')
plt.title('original')
plt.axis('off')

# geração da imagem com filtro de sobel em x e y
plt.subplot(222)
plt.imshow(sobelxy, cmap='gray')
plt.title('Sobel XY')
plt.axis('off')

# geração da imagem com filtro de sobel em x
plt.subplot(223)
plt.imshow(sobelx, cmap='gray')
plt.title('Sobel X')
plt.axis('off')

# geração da imagem com filtro de sobel em y
plt.subplot(224)
plt.imshow(sobely, cmap='gray')
plt.title('Sobel Y')
plt.axis('off')
